spring:
  profiles:
    active: production

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/license_db}
    username: ${DATABASE_USERNAME:license_user}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DATABASE_POOL_SIZE:50}
      minimum-idle: ${DATABASE_POOL_MIN_IDLE:5}
      idle-timeout: ${DATABASE_IDLE_TIMEOUT:300000}
      max-lifetime: ${DATABASE_MAX_LIFETIME:1800000}
      connection-timeout: ${DATABASE_CONNECTION_TIMEOUT:20000}
      leak-detection-threshold: ${DATABASE_LEAK_DETECTION:60000}
      pool-name: LicenseManagementPool

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        '[format_sql]': false
        '[use_sql_comments]': false
        jdbc:
          '[time_zone]': UTC
        multitenancy:
          '[tenant_identifier_resolver]': com.licensing.config.tenant.CurrentTenantResolver
          '[multi_tenant_connection_provider]': com.licensing.config.tenant.TenantConnectionProvider

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false
    table: flyway_schema_history

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:2000ms}
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:50}
          max-idle: ${REDIS_POOL_MAX_IDLE:8}
          min-idle: ${REDIS_POOL_MIN_IDLE:0}
          max-wait: ${REDIS_POOL_MAX_WAIT:2000ms}

  security:
    require-ssl: ${REQUIRE_SSL:true}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-stacktrace: never
    include-message: never
  tomcat:
    max-threads: ${TOMCAT_MAX_THREADS:200}
    min-spare-threads: ${TOMCAT_MIN_THREADS:10}
    max-connections: ${TOMCAT_MAX_CONNECTIONS:8192}
    accept-count: ${TOMCAT_ACCEPT_COUNT:100}
    connection-timeout: ${TOMCAT_CONNECTION_TIMEOUT:20000}
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
    info:
      access: READ_ONLY
    metrics:
      access: READ_ONLY
    prometheus:
      access: READ_ONLY
  metrics:
    distribution:
      percentiles-histogram:
        '[http.server.requests]': true
      percentiles:
        '[http.server.requests]': 0.5,0.95,0.99
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  config: classpath:logback-spring.xml
  level:
    root: WARN
    '[com.licensing]': INFO
    '[org.springframework.security]': WARN
    '[org.hibernate]': WARN
    '[org.springframework.web]': WARN

license:
  signing:
    private-key: ${LICENSE_SIGNING_PRIVATE_KEY}
    public-key: ${LICENSE_SIGNING_PUBLIC_KEY}
  api:
    rate-limit:
      enabled: true
      requests-per-minute: ${RATE_LIMIT_RPM:60}
      burst-capacity: ${RATE_LIMIT_BURST:100}
  security:
    jwt:
      enabled: ${JWT_ENABLED:true}
      secret: ${JWT_SECRET}
      expiration: ${JWT_EXPIRATION:3600}
    cors:
      enabled: ${CORS_ENABLED:true}
      allowed-origins: ${CORS_ALLOWED_ORIGINS:}